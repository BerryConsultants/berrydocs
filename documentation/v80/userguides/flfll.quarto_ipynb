{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"FLFLL\"\n",
        "subtitle: \"FACTS Linux File Loader Light\"\n",
        "title-block-banner: '#125740'\n",
        "title-block-banner-color: white\n",
        "format: \n",
        "  html:\n",
        "    toc: true\n",
        "    toc-depth: 4\n",
        "    toc-title: \"Table of Contents\"\n",
        "    number-depth: 4\n",
        "---\n",
        "\n",
        "#  Introduction\n",
        "\n",
        "## Purpose and Scope of this document\n",
        "\n",
        "This document provides installation and execution guidance for FACTS\n",
        "Linux File Loader Light (FLFLL), a console (non-GUI) application for\n",
        "running simulations of FACTS designs on both Linux and Windows systems.\n",
        "\n",
        "## Overview\n",
        "\n",
        "FLFLL is intended for anyone requiring FACTS to be run in a command-line\n",
        "environment. A common use-case of FLFLL involves running FACTS within\n",
        "the context of a larger automated pipeline, whereby multiple closely\n",
        "related FACTS designs (e.g., slightly different success/futility\n",
        "criteria thresholds) are simulated using FLFLL and compared using\n",
        "in-house libraries.\n",
        "\n",
        "FLFLL requires existing FACTS project files which should be created\n",
        "using the FACTS desktop application GUI. The FACTS project files contain\n",
        "a complex set of interrelated parameters and we **do not** recommend\n",
        "editing them directly as this will likely make the application unstable.\n",
        "However, Eli Lilly has released an open-source R library, “rFacts”\n",
        "(https://github.com/EliLillyCo/rfacts) which can batch create multiple\n",
        "FACTS files and run these files via FLFLL.\n",
        "\n",
        "FLFLL can run under both Linux and Windows, in 2 modes:\n",
        "\n",
        "1)  generate parameter file(s) only\n",
        "\n",
        "    a.  Generate the param files used as input for the FACTS engine\n",
        "        executables (e.g., “nuk1e.param” for Core Continuous/Dichotmous\n",
        "        designs, “init.bcrm” for Dose Escalation N-CRM designs etc.).\n",
        "\n",
        "2)  generate full simulations, which we refer to as an “end-to-end” run:\n",
        "\n",
        "    a.  Run full simulations and generate output exactly as generated\n",
        "        from FACTS.\n",
        "\n",
        "To run FLFLL on Linux, the FACTS engines must be present and Mono, a\n",
        "third-party Linux .NET interpreter, must be installed.\n",
        "\n",
        "FLFLL can take input from a single FACTS project file, or a directory of\n",
        "one or more FACTS project files, or a directory hierarchy containing\n",
        "other directories, with FACTS project files contained at any level of\n",
        "the directory structure. A directory structure of results will be\n",
        "generated matching the input directory structure.\n",
        "\n",
        "# Installation and Setup\n",
        "\n",
        "## Linux\n",
        "\n",
        "- Install Mono version 6.12 or later from\n",
        "  <https://www.mono-project.com/docs/about-mono/releases> onto the\n",
        "  target machine/server running FLFLL and ensure that all users of FLFLL\n",
        "  can run Mono. A simple test would be to ask FLFLL users to run “mono\n",
        "  --version”.\n",
        "\n",
        "- Download the enterprise release (e.g.,\n",
        "  facts-6.4-enterprise-release_20210413.1.zip) from App Center\n",
        "  (https://appcenter.ms) and unzip it onto the target machine running\n",
        "  FLFLL.\n",
        "\n",
        "- Retrieve the folder containing the FLFLL application (e.g.,\n",
        "  facts-6.4-flfll_20210413.1), rename it to a more user-friendly name\n",
        "  such as “FLFLL” and place it in an area where all users of FLFLL will\n",
        "  have the necessary permissions to execute “FLFLL.exe” (via Mono)\n",
        "  present in the application folder.\n",
        "\n",
        "- Retrieve the FACTS license file corresponding to the version of FLFLL\n",
        "  being used, ensure it is named “license.txt” and place it in the FLFLL\n",
        "  application folder. The license file should contain the following\n",
        "  attributes: OrgName, Key and StartDate (date format: yyyy/mm/dd). The\n",
        "  license file is only required for the first successful run of FLFLL on\n",
        "  the target machine: for security reasons, we would strongly recommend\n",
        "  removing the license file from the server entirely once the first\n",
        "  successful run of FLFLL has been performed on the target\n",
        "  machine/server.\n",
        "\n",
        "- Within the FLFLL application folder, go to the “bin” folder (which\n",
        "  contains the Linux engines used by FLFLL) and elevate the Linux engine\n",
        "  permissions to being executable by running “chmod +x \\[name of linux\n",
        "  engine executable here\\]” for each of the Linux engines. If you do not\n",
        "  have permission to do so, please ask your IT administrator to run this\n",
        "  command.\n",
        "\n",
        "## Windows\n",
        "\n",
        "- Download the enterprise release (e.g.,\n",
        "  facts-6.4-enterprise-release_20210413.1.zip) from App Center\n",
        "  (https://appcenter.ms) and unzip it onto the target machine running\n",
        "  FLFLL. We recommend using 7Zip (<https://www.7-zip.org/>) to perform\n",
        "  the unzipping rather than the Windows in-built unzipping tool: the\n",
        "  latter can result in the corruption of the FLFLL application as a\n",
        "  security precaution.\n",
        "\n",
        "- Retrieve the folder containing the FLFLL application (e.g.,\n",
        "  facts-6.4-flfll_20210413.1), rename it to a more user-friendly name\n",
        "  such as “FLFLL” and place it in an area where all users of FLFLL will\n",
        "  have the necessary permissions to execute “FLFLL.exe” present in the\n",
        "  application folder.\n",
        "\n",
        "- If the machine/server running FLFLL already has a licensed version of\n",
        "  FACTS installed on it, the following step can be skipped. Otherwise,\n",
        "  retrieve the FACTS license file corresponding to the version of FLFLL\n",
        "  being used, ensure it is named “license.txt” and place it in the FLFLL\n",
        "  application folder. The license file should contain the following\n",
        "  attributes: OrgName, Key and StartDate (date format: yyyy/mm/dd). The\n",
        "  license file is only required for the first successful run of FLFLL on\n",
        "  the target machine: for security reasons, we would strongly recommend\n",
        "  removing the license file from the server entirely once the first\n",
        "  successful run of FLFLL has been performed on the target\n",
        "  machine/server.\n",
        "\n",
        "# Examples\n",
        "\n",
        "## Linux\n",
        "\n",
        "- Run FLFLL to generate parameter files only for a single FACTS project\n",
        "  file:\n",
        "\n",
        "    ```{default}\n",
        "    mono \"FLFLL.exe\" -file \"home/mono/FLFLL/Input/myfile.facts\" -nSim 1\n",
        "    -seed 3500 -nFreqWeeksFiles 1 -nSubjectFiles 1 -outputPath\n",
        "    \"home/mono/FLFLL/Output\" -logPath “/home/mono/Log”\n",
        "    ```\n",
        "\n",
        "- Run FLFLL to generate parameter files only for multiple FACTS project\n",
        "  files in a single directory:\n",
        "\n",
        "    ```{default}\n",
        "    mono \"FLFLL.exe\" -file \"home/mono/FLFLL/Input \" -nSim 1 -seed 3500\n",
        "    -nFreqWeeksFiles 1 -nSubjectFiles 1 -outputPath\n",
        "    \"home/mono/FLFLL/Output\" -logPath “/home/mono/Log”\n",
        "    ```\n",
        "    \n",
        "    The directory “Input” can contain any number of FACTS project files or a directory structure of multiple directories, each containing any number of FACTS project files.\n",
        "\n",
        "- Run FLFLL to run simulations.\n",
        "\n",
        "  - Add the command line argument “-endToEndRun” to the above examples\n",
        "    and add “-skipMissingParamsCheck” if simulating using FACTS files\n",
        "    older than FACTS 6.2.\n",
        "\n",
        "## Windows\n",
        "\n",
        "- Run FLFLL to generate parameter files only for a single FACTS project\n",
        "  file:\n",
        "\n",
        "    ```{default}\n",
        "    FLFLL.exe -file “C:\\MyDocuments\\FLFLL\\Input\\myfile.facts” -nSim 1\n",
        "    -seed 3500 -nFreqWeeksFiles 1 -nSubjectFiles 1 -outputPath\n",
        "    “C:\\MyDocuments\\FLFLL\\Output\" -logPath “C:\\MyDocuments\\Log”\n",
        "    ```\n",
        "\n",
        "- Run FLFLL to generate parameter files only for multiple FACTS project\n",
        "  files:\n",
        "\n",
        "    ```{default}\n",
        "    FLFLL.exe -file “C:\\MyDocuments\\FLFLL\\Input” -nSim 1 -seed 3500\n",
        "    -nFreqWeeksFiles 1 -nSubjectFiles 1 -outputPath\n",
        "    “C:\\MyDocuments\\FLFLL\\Output\" -logPath “C:\\MyDocuments\\Log”\n",
        "    ```\n",
        "\n",
        "    The directory “Input” can contain any number of FACTS project files or\n",
        "    a directory structure of multiple directories, each containing any\n",
        "    number of FACTS project files.\n",
        "\n",
        "- Run FLFLL to run simulations.\n",
        "\n",
        "  - Add the command line argument “-endToEndRun” to the above examples\n",
        "    and add “-skipMissingParamsCheck” if simulating using FACTS file\n",
        "    older than FACTS 6.2.\n",
        "\n",
        "# API\n",
        "\n",
        "## Overview\n",
        "\n",
        "Usage: `FLFLL.exe [options]` where `[options]` are:\n",
        "\n",
        "| Option  | Description |\n",
        "|-----------------|----------------------------------------|\n",
        "| `-[h|help]` | Display the help menu. Default (False). |\n",
        "| `-[f|file]` | Specifies the file or top-level directory to open. |\n",
        "| `-[n|nSim]` | Number of simulations to run. Default (5).|\n",
        "| `-[p|packet]` | Packet size for parallelization. Default (1000). |\n",
        "| `-[g|grid]` | Flag indicating sims to run on grid. Default (False).|\n",
        "| `-[a|agg]`   | Aggregation mode. Default (None).  |\n",
        "| `-[aggPrefix]` | Prefix for aggregated files. Default (agg).  |\n",
        "| `-[nBurn]`     | Number of MCMC burn-in iterations. Default (1000).  |\n",
        "| `-[nMCMC]`    | Number of MCMC sample iterations. Default (2500).  |\n",
        "| `-[nWeeksFiles]`  | Number of weeks files to generate. Default (100).   |\n",
        "| `-[nSubjectFiles]` | Number of subjects files to generate. Default (1).   |\n",
        "| `-[nMCMCFiles]`   | Number of MCMC output files to generate. Default (0). |\n",
        "| `-[nMCMCThin]`  | MCMC thinning parameter. Default (0).   |\n",
        "| `-[nMCMCImpute]`   | MCMC length per imputation parameter. Default (1). |\n",
        "| `-[seed]`  | Set the random number seed. Default (3500).   |\n",
        "| `-[logPath]`   | If provided, specifies a directory where a log file is generated.  |\n",
        "| `-[outputPath]`   | Specifies the directory where output will be generated. Default (“out\"). |\n",
        "| `-[endToEndRun]`  | Flag indicating if simulations should be run.  |\n",
        "| `-[skipMissingParamsCheck]` | Flag indicating to skip checking for missing parameters.  |\n",
        "| `-[scenarios]`  | Flag indicating which scenarios should be processed. |\n",
        "| `-[useDifferentSeedPerScenario]` | Flag indicating whether to use a different seed for each simulated scenario. Default (False). |\n",
        "| `-[useDifferentSeedPerDesign]`  | Flag indicating whether to use a different seed for each simulated design. Default (False).   |\n",
        "\n",
        "\n",
        "## Arguments\n",
        "\n",
        "### –\\[h \\| help\\] (Help)\n",
        "\n",
        "The –h command line option displays the command line help options in the\n",
        "terminal. No simulations will be performed when the –h option is\n",
        "specified.\n",
        "\n",
        "### –\\[v \\| version\\] (Version)\n",
        "\n",
        "The –v command line option displays the FLFLL version in the terminal.\n",
        "No simulations will be performed when the –v option is specified.\n",
        "\n",
        "### –\\[f \\| file\\] FILE (Run a specific .facts file)\n",
        "\n",
        "The –f command line option is used to specify the “.facts” file to\n",
        "process. The –f option must be followed by a valid path to an existing\n",
        "“.facts” file or directory containing one or more “.facts” files. Hint:\n",
        "Remember to use quotes around the path if it includes spaces.\n",
        "\n",
        "If the supplied file name is a directory, then FACTS will process each\n",
        "“.facts” file in the directory in turn. As this only starts FACTS once,\n",
        "this can be quite a bit quicker than using a batch file or script that\n",
        "loops and starts FACTS separately for each “.facts” file.\n",
        "\n",
        "Furthermore, if the supplied file name is a directory then FACTS also\n",
        "automatically recurses through every sub-directory processing every\n",
        "“.facts” file it finds.\n",
        "\n",
        "### –\\[n \\| nSim\\] N (Run N simulations for each scenario)\n",
        "\n",
        "The –n command line option is used to specify the number of simulations\n",
        "to run. The –n option must be followed by an integer value greater than\n",
        "0. For each scenario in the FACTS project file, the application will run\n",
        "N simulations. Defaults to 5 if unspecified.\n",
        "\n",
        "### –\\[p \\| packet\\] N (Set the packet size for simulations)\n",
        "\n",
        "The –p command line option is used to specify the packet size for\n",
        "parallelization of simulations. The –p option must be followed by an\n",
        "integer value greater than 0. When using the –g option to run on a grid,\n",
        "or when running on a multicore machine it is often beneficial to\n",
        "parallelize simulations using the packetization process (see grid\n",
        "documentation for more information on packetization). The packet size\n",
        "must be greater than zero, but as in the GUI, there is no restriction\n",
        "that it be less than the number of simulations. If it is greater than\n",
        "the number of simulations, the simulations will not be packetized.\n",
        "Defaults to 1000 if unspecified.\n",
        "\n",
        "### –\\[g \\| grid\\] (Run on grid)\n",
        "\n",
        "The –g command line option instructs the application to send simulations\n",
        "to the grid (assumes that the grid is correctly configured). When\n",
        "running on the grid, the action is still performed synchronously (i.e.\n",
        "FACTS will wait while the simulations run and collect the results before\n",
        "exiting). This option is useful to parallelize long running simulations\n",
        "more than they can be parallelized locally. Defaults to run locally if\n",
        "unspecified.\n",
        "\n",
        "### –\\[a \\| agg\\] Mode (Aggregation Mode)\n",
        "\n",
        "The –a command line option specifies the aggregation action to take for\n",
        "completed simulation results. The available modes for this option are:\n",
        "\n",
        "- None – no aggregation will be performed\n",
        "\n",
        "- NoPivot – Only standard aggregation will be performed\n",
        "\n",
        "- Pivot – Both standard and pivoted aggregation will be performed.\n",
        "\n",
        "- Default, if unspecified, is None.\n",
        "\n",
        "### –aggPrefix prefix (Prefix for aggregation files)\n",
        "\n",
        "The –aggPrefix command line option specifies the prefix to use when\n",
        "naming aggregated files and must be followed by a valid file prefix.\n",
        "This option is only used when –a is set to NoPivot or Pivot. The\n",
        "aggregation files produced by aggregating across all scenarios will be\n",
        "named using the prefix\\<\\_pivot\\>\\_(filename).csv pattern, where\n",
        "\\<\\_pivot\\> is included for pivoted files only, and (filename) is\n",
        "replaced by the name of the file being aggregated. Defaults to “agg” if\n",
        "unspecified.\n",
        "\n",
        "### –nBurn N (Number of MCMC burn-in iteractions)\n",
        "\n",
        "The –nBurn command line option specifies the number of burn-in MCMC\n",
        "iterations to use in the simulation and must be followed by a valid\n",
        "integer value greater than 0. Defaults to 1000 if unspecified.\n",
        "\n",
        "### –nMCMC N (Number of MCMC sample iterations)\n",
        "\n",
        "The –nMCMC command line option specifies the number of MCMC sampling\n",
        "iterations to use in the simulation and must be followed by a valid\n",
        "integer value greater than 0. Defaults to 2500 if unspecified.\n",
        "\n",
        "### –nWeeksFiles N (Number of weeks files to output)\n",
        "\n",
        "The –nWeeksFiles command line option specifies the number of weeks files\n",
        "to output from the simulation and must be followed by a valid integer\n",
        "value at least 0. Defaults to 100 if unspecified.\n",
        "\n",
        "### –nSubjectFiles N (Number of subjects files to output)\n",
        "\n",
        "The –nSubjectFiles command line option specifies the number of subject\n",
        "files to output from the simulation and must be followed by a valid\n",
        "integer value at least 0. Defaults to 1 if unspecified.\n",
        "\n",
        "### –nMCMCFiles N (Number of MCMC files to output)\n",
        "\n",
        "The –nMCMCFiles command line option specifies the number of MCMC sample\n",
        "files to output from the simulation and must be followed by a valid\n",
        "integer value at least 0. Defaults to 0 if unspecified.\n",
        "\n",
        "**Note:** This option potentially produces a very large amount of output\n",
        "data and may fail if sufficient disk space is not available.\n",
        "\n",
        "### –nMCMCThin N (MCMC output thinning value)\n",
        "\n",
        "The –nMCMCThin command line option specifies the MCMC thinning value to\n",
        "apply to the MCMC output and must be followed by a valid integer value\n",
        "at least \\<x\\>. The thinning parameter applies only to the MCMC output,\n",
        "all MCMC samples are used for analysis. Defaults to \\<x\\> if\n",
        "unspecified.\n",
        "\n",
        "### –nMCMCImpute N (MCMC length per imputation value)\n",
        "\n",
        "The –nMCMCImpute command line option specifies the number of MCMC\n",
        "sampling iterations to use in the simulation for each imputation.\n",
        "Defaults to 1 if unspecified.\n",
        "\n",
        "### –seed (Random number seed)\n",
        "\n",
        "The –seed command line option sets the random number generator seed\n",
        "value. The default value (3500) is the same as that used in the GUI. It\n",
        "can be set to any positive integer.\n",
        "\n",
        "### -logPath Path (Path where the optional log file is placed)\n",
        "\n",
        "The –logPath command line option (if given) is used to specify the\n",
        "directory where a log file is generated. If not specified, a log file\n",
        "will not be generated. The –logPath option must be followed by a valid\n",
        "path. If the path does not exist, it will be created.\n",
        "\n",
        "**Note**: Remember to use quotes around the path if it includes spaces.\n",
        "\n",
        "### -outputPath Path (Path where output is generated)\n",
        "\n",
        "The –outputPath command line option (if given) is used to specify the\n",
        "directory where parameter files and optional simulation files are\n",
        "placed. If not specified, the output path will be the directory in which\n",
        "the .facts file is present. The –outputPath option must be followed by a\n",
        "valid path. If the path does not exist, it will be created.\n",
        "\n",
        "### -endToEndRun (Flag to indicate if simulations should be run also)\n",
        "\n",
        "The –endToEndRun command line instructs FLFLL to run full simulations.\n",
        "If unspecified, only parameter files will be generated.\n",
        "\n",
        "### -skipMissingParamsCheck (Flag to indicate to skip checking of missing parameters)\n",
        "\n",
        "The –skipMissingParamsCheck command line instructs FLFLL to skip the\n",
        "process of checking for missing parameters in legacy FACTS project files\n",
        "(.facts). If not specified, when running FACTS projects files prior to\n",
        "version 6.2, errors will prevent FLFLL from completing.\n",
        "\n",
        "### -scenarios (Flag indicating which scenarios should be processed)\n",
        "\n",
        "The –scenarios command line instructs FLFLL to run the specified\n",
        "scenarios by name. The names of the scenarios to run should be provided\n",
        "as a comma separated list. If not specified, all scenarios will be\n",
        "processed.\n",
        "\n",
        "### -useDifferentSeedPerScenario (Flag indicating whether to use a different seed for each simulated scenario)\n",
        "\n",
        "The –useDifferentSeedPerScenario command line option provides FLFLL with\n",
        "an option to set a different random number seed for each of the\n",
        "scenarios that are being simulated. FLFLL simply takes the base random\n",
        "number seed as set in the -seed flag, uses this for the first simulated\n",
        "scenario and then adds 1111 to the random number seed of any additional\n",
        "scenarios being simulated. For example, if three scenarios are being\n",
        "simulated and the -seed flag is set to 3500, the first scenario will\n",
        "have a random number seed of 3500, the second scenario a random number\n",
        "of 4611 and the third scenario a random number seed of 5722. This\n",
        "deterministic way of setting different random number seeds allows for\n",
        "reproducible simulation results.\n",
        "\n",
        "### -useDifferentSeedPerDesign (Flag indicating whether to use a different seed for each simulated design)\n",
        "\n",
        "The –useDifferentSeedPerDesign command line option provides FLFLL with\n",
        "an option to set a different base random number seed for each of the\n",
        "designs that are being simulated. This option is only used when a\n",
        "directory containing multiple FACTS designs is passed as an argument to\n",
        "the FLFLL command line, rather than a single design. FLFLL simply takes\n",
        "the base random number seed as set in the -seed flag, uses this for the\n",
        "first simulated design and then adds 1234 to the random number seed of\n",
        "any additional designs being simulated. For example, if three designs\n",
        "are being simulated and the -seed flag is set to 3500, the first design\n",
        "will have a base random number seed of 3500, the second scenario a\n",
        "random number of 4734 and the third design a base random number seed of\n",
        "5968. This deterministic way of setting different random number seeds\n",
        "allows for reproducible simulation results.\n"
      ],
      "id": "bd36acfc"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/Library/Frameworks/Python.framework/Versions/3.13/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}